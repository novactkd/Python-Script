import random
import time
import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from selenium.common.exceptions import StaleElementReferenceException, TimeoutException

# ---------- SETTINGS ----------
accounts = [
    {"username": "zain_abbasheer", "password": "devops2025"},
    {"username": "laibx_rza", "password": "devops2025"},
    {"username": "zaramallick3", "password": "devops2025"},
    {"username": "iqrasadiq303", "password": "devops2025"},
    {"username": "mehakrehman16", "password": "devops2025"},
    {"username": "anayashk921", "password": "devops2025"},
    {"username": "emanjaved3501", "password": "devops2025"},
    {"username": "nim.ra2134", "password": "devops2025"},
    {"username": "faizasaleem13", "password": "devops2025"},
    {"username": "sabaarif722", "password": "devops2025"},
    {"username": "ha_nia7118", "password": "devops2025"},
    {"username": "anum.202025", "password": "devops2025"}
    # {"username": "", "password": "devops2025"}
]

post_url = "https://www.instagram.com/p/DP1Er0jCCEp/?img_index=1"

# ---------- READ COMMENTS FROM CSV ----------
comments = []
with open("comments.csv", "r", encoding="utf-8") as file:
    reader = csv.DictReader(file)
    for row in reader:
        if "comment" in row:
            comments.append(row["comment"])
        elif len(row) > 0:
            comments.append(list(row.values())[0])

# ---------- FUNCTION TO LOGIN & COMMENT ----------
def post_comments(username, password):
    print(f"\nüöÄ Launching headless browser for {username}...")

    options = Options()
    options.add_argument("--headless=new")
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--window-size=1080,800")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")

    driver = webdriver.Chrome(options=options)
    driver.delete_all_cookies()
    driver.get("https://www.instagram.com/accounts/login/")
    print("üåê Opened Instagram login page")

    try:
        WebDriverWait(driver, 25).until(EC.presence_of_element_located((By.NAME, "username")))
    except TimeoutException:
        print("‚ö†Ô∏è Login page took too long. Retrying...")
        driver.get("https://www.instagram.com/accounts/login/")
        WebDriverWait(driver, 25).until(EC.presence_of_element_located((By.NAME, "username")))

    # Login
    print("üîê Logging in...")
    driver.find_element(By.NAME, "username").send_keys(username)
    driver.find_element(By.NAME, "password").send_keys(password)
    driver.find_element(By.XPATH, "//button[@type='submit']").click()

    WebDriverWait(driver, 30).until(EC.presence_of_element_located((By.TAG_NAME, "body")))
    time.sleep(6)

    # Handle popups
    for popup_text in ["Not Now", "Save Info"]:
        try:
            btn = WebDriverWait(driver, 6).until(
                EC.element_to_be_clickable((By.XPATH, f"//button[contains(text(),'{popup_text}')]"))
            )
            btn.click()
            print(f"‚ÑπÔ∏è Skipped popup: {popup_text}")
        except:
            pass

    # Go to post
    print("üì∏ Opening post link...")
    driver.get(post_url)

    try:
        WebDriverWait(driver, 25).until(
            EC.presence_of_element_located((By.XPATH, "//textarea[@placeholder='Add a comment‚Ä¶']"))
        )
    except TimeoutException:
        print(f"‚ö†Ô∏è Comment box not found for {username}. Skipping...")
        driver.quit()
        return

    # Shuffle comments
    random.shuffle(comments)
    num_comments = random.randint(2, 3)
    print(f"üí¨ [{username}] will post {num_comments} random comments")

    for comment in comments[:num_comments]:
        safe_comment = ''.join(ch for ch in comment if ord(ch) <= 0xFFFF)
        retries = 2  # Try twice if stale
        while retries > 0:
            try:
                comment_box = WebDriverWait(driver, 15).until(
                    EC.presence_of_element_located((By.XPATH, "//textarea[@placeholder='Add a comment‚Ä¶']"))
                )

                driver.execute_script("arguments[0].scrollIntoView(true);", comment_box)
                time.sleep(1)
                driver.execute_script("arguments[0].click();", comment_box)
                comment_box.clear()
                comment_box.send_keys(safe_comment)

                post_btn = WebDriverWait(driver, 10).until(
                    EC.element_to_be_clickable((By.XPATH, "//div[contains(text(),'Post')]"))
                )
                driver.execute_script("arguments[0].click();", post_btn)

                print(f"‚úÖ [{username}] Commented: {safe_comment}")
                delay = random.randint(8, 12)
                print(f"‚è≥ Waiting {delay}s before next comment...")
                time.sleep(delay)
                break  # Success, exit retry loop

            except StaleElementReferenceException:
                retries -= 1
                print(f"‚ôªÔ∏è Retrying due to stale element (remaining: {retries})...")
                time.sleep(2)
                continue
            except Exception as e:
                print(f"‚ö†Ô∏è Error commenting for {username}: {e}")
                break

    print(f"üéØ All random comments done for {username}")
    driver.quit()
    print("üßπ Browser closed successfully.\n")


# ---------- RUN FOR RANDOMIZED ACCOUNTS ----------
random.shuffle(accounts)  # Randomize account order

for account in accounts:
    post_comments(account["username"], account["password"])
    print(f"‚úÖ Finished for {account['username']}")
    wait_next = random.randint(15, 22)
    print(f"‚è≥ Switching to next account after {wait_next}s...")
    time.sleep(wait_next)

print("\nüèÅ All accounts completed successfully!")
